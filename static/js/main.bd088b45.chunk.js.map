{"version":3,"sources":["contexts/App.tsx","helpers/utils.ts","helpers/index.js","helpers/AsyncComponent.js","routes/Home/index.ts","routes/Trending/index.ts","routes/Random/index.ts","routes/index.tsx","components/Nav/Nav.tsx","components/SearchBar/SearchBar.tsx","App.tsx","hooks/useScrollDirection.js","serviceWorker.ts","index.tsx"],"names":["AppContext","React","createContext","AppProvider","props","useState","query","state","setState","Provider","value","children","getNoOfCols","windowSize","Math","floor","generateCols","data","screenWidth","cols","highRes","gifAttr","stillAttr","items","Array","map","heights","fill","i","length","image","selectCol","indexOf","min","images","height","width","heightWithRatio","parseInt","push","gif","still","title","debounce","func","timeout","wait","immediate","context","this","args","arguments","clearTimeout","apply","setTimeout","getComponent","AsyncComponent","Component","then","ComponentToRender","Home","module","default","Trending","Random","Router","exact","path","to","memo","className","cx","activeClassName","Search","useContext","term","setTerm","delayedQuery","useRef","q","current","search","useCallback","onChange","event","val","target","trim","type","id","aria-label","placeholder","onClick","withRouter","location","data-testid","pathname","initialDirection","thresholdPixels","off","scrollDir","setScrollDir","lastScroll","setLastScroll","useEffect","threshold","lastScrollY","window","pageYOffset","ticking","updateScrollDir","scrollY","abs","onScroll","requestAnimationFrame","addEventListener","removeEventListener","useScrollDirection","showHeader","basename","process","App","fixed","SearchBar","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bd088b45.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const initialState = [{}, () => {}];\nexport const AppContext = React.createContext(initialState);\n\nexport function AppProvider(props: any) {\n  const [state, setState] = useState({\n    query: \"\",\n  });\n\n  return (\n    <AppContext.Provider value={[state, setState]}>\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n","import { GIFDatum } from \"../defs/interfaces\";\n\nexport function getNoOfCols(windowSize: number) {\n  if (windowSize < 500) return 2;\n  else if (windowSize < 700) return 3;\n  else return Math.floor(windowSize / 250);\n}\n\ninterface IGenerateProps {\n  data: GIFDatum[];\n  screenWidth: number;\n  cols: number;\n  highRes?: boolean;\n}\nexport function generateCols({\n  data,\n  screenWidth,\n  cols,\n  highRes = false,\n}: IGenerateProps) {\n  const gifAttr = highRes ? \"original\" : \"fixed_width\";\n  const stillAttr = highRes ? \"original_still\" : \"fixed_width_still\";\n\n  const items: Array<any> = [...new Array(cols)].map(() => []); // images array\n  const heights: Array<number> = new Array(cols).fill(0); // maintain heights of each column\n\n  for (let i = 0; i < data.length; i++) {\n    const image = data[i];\n    const selectCol = heights.indexOf(Math.min(...heights));\n    const { height, width } = image.images[gifAttr];\n\n    //   Get new height with ratio\n    const heightWithRatio =\n      (parseInt(height) * screenWidth) / cols / parseInt(width);\n\n    //   Update height\n    heights[selectCol] += heightWithRatio;\n\n    //   Add image on to column\n    items[selectCol].push({\n      gif: image.images[gifAttr],\n      still: image.images[stillAttr],\n      height: heightWithRatio,\n      title: image.title,\n    });\n  }\n\n  return { items, heights };\n}\n","export { generateCols, getNoOfCols } from \"./utils\";\nexport const debounce = (func, wait = 20, immediate = true) => {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    //Moving this line above timeout assignment\n    if (immediate && !timeout) func.apply(context, args);\n    timeout = setTimeout(function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n  };\n};\n","import React, { Component } from \"react\";\nexport default function (getComponent) {\n  class AsyncComponent extends Component {\n    static Component = null;\n    state = { Component: AsyncComponent.Component };\n\n    UNSAFE_componentWillMount() {\n      if (!this.state.Component) {\n        getComponent().then((ComponentToRender) => {\n          AsyncComponent.Component = ComponentToRender;\n          this.setState({ Component: ComponentToRender });\n        });\n      }\n    }\n    render() {\n      const ComponentToRender = this.state.Component;\n      if (ComponentToRender) {\n        return <ComponentToRender {...this.props} />;\n      }\n      return null;\n    }\n  }\n  return AsyncComponent;\n}\n","import AsyncComponent from \"../../helpers/AsyncComponent\";\n\nconst Home = AsyncComponent(() =>\n  import(\"./Home\").then((module) => module.default)\n);\n\nexport default Home;\n","import AsyncComponent from \"../../helpers/AsyncComponent\";\n\nconst Trending = AsyncComponent(() =>\n  import(\"./Trending\").then((module) => module.default)\n);\n\nexport default Trending;\n","import AsyncComponent from \"../../helpers/AsyncComponent\";\n\nconst Random = AsyncComponent(() =>\n  import(\"./Random\").then((module) => module.default)\n);\n\nexport default Random;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Home from \"../routes/Home\";\nimport Trending from \"../routes/Trending\";\nimport Random from \"../routes/Random\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/trending\">\n        <Trending />\n      </Route>\n      <Route path=\"/random\">\n        <Random />\n      </Route>\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Router;\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Nav(props: { className?: string }) {\n  return (\n    <div className={cx(\"nav\", props.className)}>\n      <NavLink\n        className=\"nav-item ripple\"\n        exact\n        activeClassName=\"active\"\n        to=\"/\"\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        className=\"nav-item ripple\"\n        exact\n        activeClassName=\"active\"\n        to=\"/trending\"\n      >\n        Trending\n      </NavLink>\n\n      <NavLink\n        className=\"nav-item ripple\"\n        exact\n        activeClassName=\"active\"\n        to=\"/random\"\n      >\n        Random\n      </NavLink>\n    </div>\n  );\n}\n\nexport default React.memo(Nav);\n","import React, { useState, useContext, useCallback, useRef } from \"react\";\n\n// Contexts\nimport { AppContext } from \"../../contexts/App\";\n\n// Helpers\nimport { debounce } from \"../../helpers\";\n\nfunction Search() {\n  const [state, setState] = useContext<any>(AppContext);\n  const [term, setTerm] = useState(state.query);\n  const DEBOUNCE_TIME = 500;\n\n  const delayedQuery = useRef(\n    debounce(\n      (q: string) => {\n        setState({\n          query: q,\n        });\n      },\n      DEBOUNCE_TIME,\n      false\n    )\n  ).current;\n\n  const search = useCallback(() => {\n    setState({\n      query: term,\n    });\n  }, [setState, term]);\n\n  const onChange = useCallback(\n    (event) => {\n      const val = event.target.value.trim();\n      setTerm(val);\n      delayedQuery(val);\n    },\n    [delayedQuery]\n  );\n\n  return (\n    <div className=\"search-bar\">\n      <div className=\"input-container\">\n        <input\n          type=\"search\"\n          id=\"gif-search\"\n          aria-label=\"Search GIFs\"\n          value={term}\n          onChange={onChange}\n          placeholder=\"Search GIFs\"\n        ></input>\n        <button className=\"action btn\" onClick={search}>\n          Go\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport RouterContainer from \"./routes\";\n\nimport Nav from \"./components/Nav\";\nimport SearchBar from \"./components/SearchBar\";\n\nimport { withRouter } from \"react-router\";\n\n// Hooks\nimport {\n  useScrollDirection,\n  SCROLL_UP,\n  SCROLL_DOWN,\n} from \"./hooks/useScrollDirection\";\n\n// Contexts\nimport { AppProvider } from \"./contexts/App\";\n\nconst BASE_URL = process.env.PUBLIC_URL;\n\nexport const LocationDisplay = withRouter(({ location }) => (\n  <div data-testid=\"location-display\">{location.pathname}</div>\n));\n\nexport default function () {\n  const { scrollDir, lastScroll } = useScrollDirection({\n    initialDirection: SCROLL_DOWN,\n    thresholdPixels: 50,\n    off: false,\n  });\n\n  const showHeader = scrollDir === SCROLL_UP && lastScroll > 100;\n\n  return (\n    <BrowserRouter basename={BASE_URL}>\n      <AppProvider>\n        <div\n          className={cx(\"header\", {\n            fixed: showHeader,\n          })}\n        >\n          <SearchBar />\n          <Nav className={cx({})} />\n        </div>\n        <div\n          className={cx(\"gif-container\", {\n            \"container-padding\": showHeader,\n          })}\n        >\n          <RouterContainer />\n          {/* <LocationDisplay /> */}\n        </div>\n      </AppProvider>\n    </BrowserRouter>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport const SCROLL_UP = \"up\";\nexport const SCROLL_DOWN = \"down\";\n\nexport const useScrollDirection = ({\n  initialDirection,\n  thresholdPixels,\n  off,\n} = {}) => {\n  const [scrollDir, setScrollDir] = useState(initialDirection);\n  const [lastScroll, setLastScroll] = useState(0);\n\n  useEffect(() => {\n    const threshold = thresholdPixels || 0;\n    let lastScrollY = window.pageYOffset;\n    let ticking = false;\n\n    const updateScrollDir = () => {\n      const scrollY = window.pageYOffset;\n\n      if (Math.abs(scrollY - lastScrollY) < threshold) {\n        // We haven't exceeded the threshold\n        ticking = false;\n        return;\n      }\n\n      setScrollDir(scrollY > lastScrollY ? SCROLL_DOWN : SCROLL_UP);\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n      ticking = false;\n      setLastScroll(lastScrollY);\n    };\n\n    const onScroll = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(updateScrollDir);\n        ticking = true;\n      }\n    };\n\n    /**\n     * Bind the scroll handler if `off` is set to false.\n     * If `off` is set to true reset the scroll direction.\n     */\n    !off\n      ? window.addEventListener(\"scroll\", onScroll)\n      : setScrollDir(initialDirection);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [initialDirection, thresholdPixels, off]);\n\n  return { scrollDir, lastScroll };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./styles/base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}